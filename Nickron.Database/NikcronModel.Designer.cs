//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("NikcronModel", "ProductModelManufacture", "ProductModel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductModel), "Manufacture", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.Manufacture), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ProductModelProductType", "ProductModel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductModel), "ProductType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.ProductType), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ProductItemProductModel", "ProductItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductItem), "ProductModel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.ProductModel), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ProductItemStockhouse", "ProductItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductItem), "Stockhouse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.Stockhouse), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ProductItemDistributor", "ProductItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductItem), "Distributor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.Distributor), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "DealersProductItem", "ProductItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductItem), "Dealers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.Dealers), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ProductItemRetailer", "ProductItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductItem), "Retailer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.Retailer), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "DealersRetailer", "Dealers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.Dealers), "Retailer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Retailer), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "StockhouseDistributor", "Stockhouse", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.Stockhouse), "Distributor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Distributor), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "DistributorDealers", "Distributor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.Distributor), "Dealers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Dealers), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "UserRole", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.User), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.Role), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "UserOffice", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.User), "Office", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.Office), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ProductHistoryProductItem", "ProductHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductHistory), "ProductItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.ProductItem), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "SalesProductItem", "Sales", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.Sale), "ProductItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.ProductItem))]
[assembly: EdmRelationshipAttribute("NikcronModel", "SalesUser", "Sales", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Sale), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.User), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "SaleProductWarranty", "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.Sale), "ProductWarranty", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.ProductWarranty))]
[assembly: EdmRelationshipAttribute("NikcronModel", "SaleCustomer", "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Sale), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.Customer), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ProductItemProductColors", "ProductItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductItem), "ProductColors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.ProductColors), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ProductModelProductColors", "ProductModel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductModel), "ProductColors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductColors))]
[assembly: EdmRelationshipAttribute("NikcronModel", "ProductModelProductImage", "ProductModel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.ProductModel), "ProductImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductImage), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ServiceSale", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Service), "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.Sale), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "SalesReturnSale", "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.Sale), "SalesReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.SalesReturn))]
[assembly: EdmRelationshipAttribute("NikcronModel", "SalesReturnUser", "SalesReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.SalesReturn), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.User), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ServiceUser", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Service), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.User), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "SalesReturnReturnType", "SalesReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.SalesReturn), "ReturnType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.ReturnType), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ServiceServiceType", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Service), "ServiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.ServiceType), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ServiceServiceCentre", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Service), "ServiceCentre", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.ServiceCentre), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "StateCountry", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.State), "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.Country), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "StateCity", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.State), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.City), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "CompanyStockhouse", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nickron.Database.Company), "Stockhouse", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Stockhouse), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "ProductItemProductWarranty", "ProductItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.ProductItem), "ProductWarranty", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nickron.Database.ProductWarranty), true)]
[assembly: EdmRelationshipAttribute("NikcronModel", "StockhouseZone", "Stockhouse", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Stockhouse), "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nickron.Database.Zone))]

#endregion

namespace Nickron.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NikcronModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NikcronModelContainer object using the connection string found in the 'NikcronModelContainer' section of the application configuration file.
        /// </summary>
        public NikcronModelContainer() : base("name=NikcronModelContainer", "NikcronModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NikcronModelContainer object.
        /// </summary>
        public NikcronModelContainer(string connectionString) : base(connectionString, "NikcronModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NikcronModelContainer object.
        /// </summary>
        public NikcronModelContainer(EntityConnection connection) : base(connection, "NikcronModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Office> Offices
        {
            get
            {
                if ((_Offices == null))
                {
                    _Offices = base.CreateObjectSet<Office>("Offices");
                }
                return _Offices;
            }
        }
        private ObjectSet<Office> _Offices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Zone> Zones
        {
            get
            {
                if ((_Zones == null))
                {
                    _Zones = base.CreateObjectSet<Zone>("Zones");
                }
                return _Zones;
            }
        }
        private ObjectSet<Zone> _Zones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductType> ProductTypes
        {
            get
            {
                if ((_ProductTypes == null))
                {
                    _ProductTypes = base.CreateObjectSet<ProductType>("ProductTypes");
                }
                return _ProductTypes;
            }
        }
        private ObjectSet<ProductType> _ProductTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Manufacture> Manufactures
        {
            get
            {
                if ((_Manufactures == null))
                {
                    _Manufactures = base.CreateObjectSet<Manufacture>("Manufactures");
                }
                return _Manufactures;
            }
        }
        private ObjectSet<Manufacture> _Manufactures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductModel> ProductModels
        {
            get
            {
                if ((_ProductModels == null))
                {
                    _ProductModels = base.CreateObjectSet<ProductModel>("ProductModels");
                }
                return _ProductModels;
            }
        }
        private ObjectSet<ProductModel> _ProductModels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductWarranty> ProductWarranties
        {
            get
            {
                if ((_ProductWarranties == null))
                {
                    _ProductWarranties = base.CreateObjectSet<ProductWarranty>("ProductWarranties");
                }
                return _ProductWarranties;
            }
        }
        private ObjectSet<ProductWarranty> _ProductWarranties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductItem> ProductItems
        {
            get
            {
                if ((_ProductItems == null))
                {
                    _ProductItems = base.CreateObjectSet<ProductItem>("ProductItems");
                }
                return _ProductItems;
            }
        }
        private ObjectSet<ProductItem> _ProductItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductColors> ProductColor
        {
            get
            {
                if ((_ProductColor == null))
                {
                    _ProductColor = base.CreateObjectSet<ProductColors>("ProductColor");
                }
                return _ProductColor;
            }
        }
        private ObjectSet<ProductColors> _ProductColor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductHistory> ProductHistories
        {
            get
            {
                if ((_ProductHistories == null))
                {
                    _ProductHistories = base.CreateObjectSet<ProductHistory>("ProductHistories");
                }
                return _ProductHistories;
            }
        }
        private ObjectSet<ProductHistory> _ProductHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sale> Sales
        {
            get
            {
                if ((_Sales == null))
                {
                    _Sales = base.CreateObjectSet<Sale>("Sales");
                }
                return _Sales;
            }
        }
        private ObjectSet<Sale> _Sales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductImage> ProductImages
        {
            get
            {
                if ((_ProductImages == null))
                {
                    _ProductImages = base.CreateObjectSet<ProductImage>("ProductImages");
                }
                return _ProductImages;
            }
        }
        private ObjectSet<ProductImage> _ProductImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesReturn> SalesReturns
        {
            get
            {
                if ((_SalesReturns == null))
                {
                    _SalesReturns = base.CreateObjectSet<SalesReturn>("SalesReturns");
                }
                return _SalesReturns;
            }
        }
        private ObjectSet<SalesReturn> _SalesReturns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Service> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Service>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Service> _Services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReturnType> ReturnTypes
        {
            get
            {
                if ((_ReturnTypes == null))
                {
                    _ReturnTypes = base.CreateObjectSet<ReturnType>("ReturnTypes");
                }
                return _ReturnTypes;
            }
        }
        private ObjectSet<ReturnType> _ReturnTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceType> ServiceTypes
        {
            get
            {
                if ((_ServiceTypes == null))
                {
                    _ServiceTypes = base.CreateObjectSet<ServiceType>("ServiceTypes");
                }
                return _ServiceTypes;
            }
        }
        private ObjectSet<ServiceType> _ServiceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Offices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOffices(Office office)
        {
            base.AddObject("Offices", office);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Zones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZones(Zone zone)
        {
            base.AddObject("Zones", zone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductTypes(ProductType productType)
        {
            base.AddObject("ProductTypes", productType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Manufactures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManufactures(Manufacture manufacture)
        {
            base.AddObject("Manufactures", manufacture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductModels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductModels(ProductModel productModel)
        {
            base.AddObject("ProductModels", productModel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductWarranties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductWarranties(ProductWarranty productWarranty)
        {
            base.AddObject("ProductWarranties", productWarranty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductItems(ProductItem productItem)
        {
            base.AddObject("ProductItems", productItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductColor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductColor(ProductColors productColors)
        {
            base.AddObject("ProductColor", productColors);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductHistories(ProductHistory productHistory)
        {
            base.AddObject("ProductHistories", productHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSales(Sale sale)
        {
            base.AddObject("Sales", sale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductImages(ProductImage productImage)
        {
            base.AddObject("ProductImages", productImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesReturns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesReturns(SalesReturn salesReturn)
        {
            base.AddObject("SalesReturns", salesReturn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServices(Service service)
        {
            base.AddObject("Services", service);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReturnTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReturnTypes(ReturnType returnType)
        {
            base.AddObject("ReturnTypes", returnType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceTypes(ServiceType serviceType)
        {
            base.AddObject("ServiceTypes", serviceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="BusinessOffice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Stockhouse))]
    [KnownTypeAttribute(typeof(Distributor))]
    [KnownTypeAttribute(typeof(Dealers))]
    [KnownTypeAttribute(typeof(Retailer))]
    public partial class BusinessOffice : Office
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessOffice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contact1">Initial value of the Contact1 property.</param>
        /// <param name="contact2">Initial value of the Contact2 property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static BusinessOffice CreateBusinessOffice(global::System.Int32 id, Address address, Contact contact1, Contact contact2, Status status, AuditLog auditLog)
        {
            BusinessOffice businessOffice = new BusinessOffice();
            businessOffice.Id = id;
            businessOffice.Address = StructuralObject.VerifyComplexObjectIsNotNull(address, "Address");
            businessOffice.Contact1 = StructuralObject.VerifyComplexObjectIsNotNull(contact1, "Contact1");
            businessOffice.Contact2 = StructuralObject.VerifyComplexObjectIsNotNull(contact2, "Contact2");
            businessOffice.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            businessOffice.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return businessOffice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EvaluationType
        {
            get
            {
                return _EvaluationType;
            }
            set
            {
                OnEvaluationTypeChanging(value);
                ReportPropertyChanging("EvaluationType");
                _EvaluationType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EvaluationType");
                OnEvaluationTypeChanged();
            }
        }
        private global::System.String _EvaluationType;
        partial void OnEvaluationTypeChanging(global::System.String value);
        partial void OnEvaluationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> JoiningDate
        {
            get
            {
                return _JoiningDate;
            }
            set
            {
                OnJoiningDateChanging(value);
                ReportPropertyChanging("JoiningDate");
                _JoiningDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoiningDate");
                OnJoiningDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _JoiningDate;
        partial void OnJoiningDateChanging(Nullable<global::System.DateTime> value);
        partial void OnJoiningDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecommendationFrom
        {
            get
            {
                return _RecommendationFrom;
            }
            set
            {
                OnRecommendationFromChanging(value);
                ReportPropertyChanging("RecommendationFrom");
                _RecommendationFrom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecommendationFrom");
                OnRecommendationFromChanged();
            }
        }
        private global::System.String _RecommendationFrom;
        partial void OnRecommendationFromChanging(global::System.String value);
        partial void OnRecommendationFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CorporateStatus
        {
            get
            {
                return _CorporateStatus;
            }
            set
            {
                OnCorporateStatusChanging(value);
                ReportPropertyChanging("CorporateStatus");
                _CorporateStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CorporateStatus");
                OnCorporateStatusChanged();
            }
        }
        private global::System.String _CorporateStatus;
        partial void OnCorporateStatusChanging(global::System.String value);
        partial void OnCorporateStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegistrationNumber
        {
            get
            {
                return _RegistrationNumber;
            }
            set
            {
                OnRegistrationNumberChanging(value);
                ReportPropertyChanging("RegistrationNumber");
                _RegistrationNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegistrationNumber");
                OnRegistrationNumberChanged();
            }
        }
        private global::System.String _RegistrationNumber;
        partial void OnRegistrationNumberChanging(global::System.String value);
        partial void OnRegistrationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FunctioningFrom
        {
            get
            {
                return _FunctioningFrom;
            }
            set
            {
                OnFunctioningFromChanging(value);
                ReportPropertyChanging("FunctioningFrom");
                _FunctioningFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FunctioningFrom");
                OnFunctioningFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _FunctioningFrom;
        partial void OnFunctioningFromChanging(Nullable<global::System.DateTime> value);
        partial void OnFunctioningFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IndividualHouseAddress
        {
            get
            {
                return _IndividualHouseAddress;
            }
            set
            {
                OnIndividualHouseAddressChanging(value);
                ReportPropertyChanging("IndividualHouseAddress");
                _IndividualHouseAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IndividualHouseAddress");
                OnIndividualHouseAddressChanged();
            }
        }
        private global::System.String _IndividualHouseAddress;
        partial void OnIndividualHouseAddressChanging(global::System.String value);
        partial void OnIndividualHouseAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirmRegistration
        {
            get
            {
                return _FirmRegistration;
            }
            set
            {
                OnFirmRegistrationChanging(value);
                ReportPropertyChanging("FirmRegistration");
                _FirmRegistration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirmRegistration");
                OnFirmRegistrationChanged();
            }
        }
        private global::System.String _FirmRegistration;
        partial void OnFirmRegistrationChanging(global::System.String value);
        partial void OnFirmRegistrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TIN
        {
            get
            {
                return _TIN;
            }
            set
            {
                OnTINChanging(value);
                ReportPropertyChanging("TIN");
                _TIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TIN");
                OnTINChanged();
            }
        }
        private global::System.String _TIN;
        partial void OnTINChanging(global::System.String value);
        partial void OnTINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAN
        {
            get
            {
                return _PAN;
            }
            set
            {
                OnPANChanging(value);
                ReportPropertyChanging("PAN");
                _PAN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAN");
                OnPANChanged();
            }
        }
        private global::System.String _PAN;
        partial void OnPANChanging(global::System.String value);
        partial void OnPANChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CST
        {
            get
            {
                return _CST;
            }
            set
            {
                OnCSTChanging(value);
                ReportPropertyChanging("CST");
                _CST = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CST");
                OnCSTChanged();
            }
        }
        private global::System.String _CST;
        partial void OnCSTChanging(global::System.String value);
        partial void OnCSTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessPresentAddress
        {
            get
            {
                return _BusinessPresentAddress;
            }
            set
            {
                OnBusinessPresentAddressChanging(value);
                ReportPropertyChanging("BusinessPresentAddress");
                _BusinessPresentAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessPresentAddress");
                OnBusinessPresentAddressChanged();
            }
        }
        private global::System.String _BusinessPresentAddress;
        partial void OnBusinessPresentAddressChanging(global::System.String value);
        partial void OnBusinessPresentAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankAccountNumber
        {
            get
            {
                return _BankAccountNumber;
            }
            set
            {
                OnBankAccountNumberChanging(value);
                ReportPropertyChanging("BankAccountNumber");
                _BankAccountNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankAccountNumber");
                OnBankAccountNumberChanged();
            }
        }
        private global::System.String _BankAccountNumber;
        partial void OnBankAccountNumberChanging(global::System.String value);
        partial void OnBankAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankIFSC
        {
            get
            {
                return _BankIFSC;
            }
            set
            {
                OnBankIFSCChanging(value);
                ReportPropertyChanging("BankIFSC");
                _BankIFSC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankIFSC");
                OnBankIFSCChanged();
            }
        }
        private global::System.String _BankIFSC;
        partial void OnBankIFSCChanging(global::System.String value);
        partial void OnBankIFSCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Coverages
        {
            get
            {
                return _Coverages;
            }
            set
            {
                OnCoveragesChanging(value);
                ReportPropertyChanging("Coverages");
                _Coverages = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Coverages");
                OnCoveragesChanged();
            }
        }
        private global::System.String _Coverages;
        partial void OnCoveragesChanging(global::System.String value);
        partial void OnCoveragesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Languages
        {
            get
            {
                return _Languages;
            }
            set
            {
                OnLanguagesChanging(value);
                ReportPropertyChanging("Languages");
                _Languages = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Languages");
                OnLanguagesChanged();
            }
        }
        private global::System.String _Languages;
        partial void OnLanguagesChanging(global::System.String value);
        partial void OnLanguagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StrengthOfFieldForce
        {
            get
            {
                return _StrengthOfFieldForce;
            }
            set
            {
                OnStrengthOfFieldForceChanging(value);
                ReportPropertyChanging("StrengthOfFieldForce");
                _StrengthOfFieldForce = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StrengthOfFieldForce");
                OnStrengthOfFieldForceChanged();
            }
        }
        private Nullable<global::System.Int32> _StrengthOfFieldForce;
        partial void OnStrengthOfFieldForceChanging(Nullable<global::System.Int32> value);
        partial void OnStrengthOfFieldForceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TradeCreditFacilites
        {
            get
            {
                return _TradeCreditFacilites;
            }
            set
            {
                OnTradeCreditFacilitesChanging(value);
                ReportPropertyChanging("TradeCreditFacilites");
                _TradeCreditFacilites = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TradeCreditFacilites");
                OnTradeCreditFacilitesChanged();
            }
        }
        private global::System.String _TradeCreditFacilites;
        partial void OnTradeCreditFacilitesChanging(global::System.String value);
        partial void OnTradeCreditFacilitesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PeakSalesPeriod
        {
            get
            {
                return _PeakSalesPeriod;
            }
            set
            {
                OnPeakSalesPeriodChanging(value);
                ReportPropertyChanging("PeakSalesPeriod");
                _PeakSalesPeriod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PeakSalesPeriod");
                OnPeakSalesPeriodChanged();
            }
        }
        private global::System.String _PeakSalesPeriod;
        partial void OnPeakSalesPeriodChanging(global::System.String value);
        partial void OnPeakSalesPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExpectedMonthlyLifting
        {
            get
            {
                return _ExpectedMonthlyLifting;
            }
            set
            {
                OnExpectedMonthlyLiftingChanging(value);
                ReportPropertyChanging("ExpectedMonthlyLifting");
                _ExpectedMonthlyLifting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedMonthlyLifting");
                OnExpectedMonthlyLiftingChanged();
            }
        }
        private Nullable<global::System.Int32> _ExpectedMonthlyLifting;
        partial void OnExpectedMonthlyLiftingChanging(Nullable<global::System.Int32> value);
        partial void OnExpectedMonthlyLiftingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PopularFestivalFairs
        {
            get
            {
                return _PopularFestivalFairs;
            }
            set
            {
                OnPopularFestivalFairsChanging(value);
                ReportPropertyChanging("PopularFestivalFairs");
                _PopularFestivalFairs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PopularFestivalFairs");
                OnPopularFestivalFairsChanged();
            }
        }
        private global::System.String _PopularFestivalFairs;
        partial void OnPopularFestivalFairsChanging(global::System.String value);
        partial void OnPopularFestivalFairsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Approver
        {
            get
            {
                return _Approver;
            }
            set
            {
                OnApproverChanging(value);
                ReportPropertyChanging("Approver");
                _Approver = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Approver");
                OnApproverChanged();
            }
        }
        private global::System.String _Approver;
        partial void OnApproverChanging(global::System.String value);
        partial void OnApproverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApprovalComments
        {
            get
            {
                return _ApprovalComments;
            }
            set
            {
                OnApprovalCommentsChanging(value);
                ReportPropertyChanging("ApprovalComments");
                _ApprovalComments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApprovalComments");
                OnApprovalCommentsChanged();
            }
        }
        private global::System.String _ApprovalComments;
        partial void OnApprovalCommentsChanging(global::System.String value);
        partial void OnApprovalCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UploadedFile
        {
            get
            {
                return _UploadedFile;
            }
            set
            {
                OnUploadedFileChanging(value);
                ReportPropertyChanging("UploadedFile");
                _UploadedFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UploadedFile");
                OnUploadedFileChanged();
            }
        }
        private global::System.String _UploadedFile;
        partial void OnUploadedFileChanging(global::System.String value);
        partial void OnUploadedFileChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        public static City CreateCity(global::System.Int32 id, global::System.String name, Status status, AuditLog auditLog, global::System.Int32 stateId)
        {
            City city = new City();
            city.Id = id;
            city.Name = name;
            city.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            city.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            city.StateId = stateId;
            return city;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : Office
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contact1">Initial value of the Contact1 property.</param>
        /// <param name="contact2">Initial value of the Contact2 property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static Company CreateCompany(global::System.Int32 id, Address address, Contact contact1, Contact contact2, Status status, AuditLog auditLog)
        {
            Company company = new Company();
            company.Id = id;
            company.Address = StructuralObject.VerifyComplexObjectIsNotNull(address, "Address");
            company.Contact1 = StructuralObject.VerifyComplexObjectIsNotNull(contact1, "Contact1");
            company.Contact2 = StructuralObject.VerifyComplexObjectIsNotNull(contact2, "Contact2");
            company.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            company.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return company;
        }

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "CompanyStockhouse", "Stockhouse")]
        public EntityCollection<Stockhouse> Stockhouses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stockhouse>("NikcronModel.CompanyStockhouse", "Stockhouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stockhouse>("NikcronModel.CompanyStockhouse", "Stockhouse", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static Country CreateCountry(global::System.Int16 id, global::System.String name, Status status, AuditLog auditLog)
        {
            Country country = new Country();
            country.Id = id;
            country.Name = name;
            country.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            country.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int16 _Id;
        partial void OnIdChanging(global::System.Int16 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "StateCountry", "State")]
        public EntityCollection<State> States
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<State>("NikcronModel.StateCountry", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<State>("NikcronModel.StateCountry", "State", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : Person
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="presentAddress">Initial value of the PresentAddress property.</param>
        /// <param name="permanentAddress">Initial value of the PermanentAddress property.</param>
        /// <param name="contact">Initial value of the Contact property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static Customer CreateCustomer(global::System.Int32 id, Address presentAddress, Address permanentAddress, Contact contact, Status status, AuditLog auditLog)
        {
            Customer customer = new Customer();
            customer.Id = id;
            customer.PresentAddress = StructuralObject.VerifyComplexObjectIsNotNull(presentAddress, "PresentAddress");
            customer.PermanentAddress = StructuralObject.VerifyComplexObjectIsNotNull(permanentAddress, "PermanentAddress");
            customer.Contact = StructuralObject.VerifyComplexObjectIsNotNull(contact, "Contact");
            customer.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            customer.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return customer;
        }

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "SaleCustomer", "Sale")]
        public EntityCollection<Sale> Sales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sale>("NikcronModel.SaleCustomer", "Sale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sale>("NikcronModel.SaleCustomer", "Sale", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Dealers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dealers : BusinessOffice
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dealers object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contact1">Initial value of the Contact1 property.</param>
        /// <param name="contact2">Initial value of the Contact2 property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        /// <param name="distributorId">Initial value of the DistributorId property.</param>
        public static Dealers CreateDealers(global::System.Int32 id, Address address, Contact contact1, Contact contact2, Status status, AuditLog auditLog, global::System.Int32 distributorId)
        {
            Dealers dealers = new Dealers();
            dealers.Id = id;
            dealers.Address = StructuralObject.VerifyComplexObjectIsNotNull(address, "Address");
            dealers.Contact1 = StructuralObject.VerifyComplexObjectIsNotNull(contact1, "Contact1");
            dealers.Contact2 = StructuralObject.VerifyComplexObjectIsNotNull(contact2, "Contact2");
            dealers.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            dealers.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            dealers.DistributorId = distributorId;
            return dealers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DistributorId
        {
            get
            {
                return _DistributorId;
            }
            set
            {
                OnDistributorIdChanging(value);
                ReportPropertyChanging("DistributorId");
                _DistributorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistributorId");
                OnDistributorIdChanged();
            }
        }
        private global::System.Int32 _DistributorId;
        partial void OnDistributorIdChanging(global::System.Int32 value);
        partial void OnDistributorIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "DealersRetailer", "Retailer")]
        public EntityCollection<Retailer> Retailers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Retailer>("NikcronModel.DealersRetailer", "Retailer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Retailer>("NikcronModel.DealersRetailer", "Retailer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "DistributorDealers", "Distributor")]
        public Distributor Distributor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Distributor>("NikcronModel.DistributorDealers", "Distributor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Distributor>("NikcronModel.DistributorDealers", "Distributor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Distributor> DistributorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Distributor>("NikcronModel.DistributorDealers", "Distributor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Distributor>("NikcronModel.DistributorDealers", "Distributor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Distributor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Distributor : BusinessOffice
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Distributor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contact1">Initial value of the Contact1 property.</param>
        /// <param name="contact2">Initial value of the Contact2 property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        /// <param name="stockhouseId">Initial value of the StockhouseId property.</param>
        public static Distributor CreateDistributor(global::System.Int32 id, Address address, Contact contact1, Contact contact2, Status status, AuditLog auditLog, global::System.Int32 stockhouseId)
        {
            Distributor distributor = new Distributor();
            distributor.Id = id;
            distributor.Address = StructuralObject.VerifyComplexObjectIsNotNull(address, "Address");
            distributor.Contact1 = StructuralObject.VerifyComplexObjectIsNotNull(contact1, "Contact1");
            distributor.Contact2 = StructuralObject.VerifyComplexObjectIsNotNull(contact2, "Contact2");
            distributor.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            distributor.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            distributor.StockhouseId = stockhouseId;
            return distributor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockhouseId
        {
            get
            {
                return _StockhouseId;
            }
            set
            {
                OnStockhouseIdChanging(value);
                ReportPropertyChanging("StockhouseId");
                _StockhouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockhouseId");
                OnStockhouseIdChanged();
            }
        }
        private global::System.Int32 _StockhouseId;
        partial void OnStockhouseIdChanging(global::System.Int32 value);
        partial void OnStockhouseIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "StockhouseDistributor", "Stockhouse")]
        public Stockhouse Stockhouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stockhouse>("NikcronModel.StockhouseDistributor", "Stockhouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stockhouse>("NikcronModel.StockhouseDistributor", "Stockhouse").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stockhouse> StockhouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stockhouse>("NikcronModel.StockhouseDistributor", "Stockhouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stockhouse>("NikcronModel.StockhouseDistributor", "Stockhouse", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "DistributorDealers", "Dealers")]
        public EntityCollection<Dealers> Dealers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dealers>("NikcronModel.DistributorDealers", "Dealers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dealers>("NikcronModel.DistributorDealers", "Dealers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Laptop")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Laptop : ProductModel
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Laptop object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="manufactureId">Initial value of the ManufactureId property.</param>
        /// <param name="productTypeId">Initial value of the ProductTypeId property.</param>
        public static Laptop CreateLaptop(global::System.Int32 id, global::System.Int32 manufactureId, global::System.Int32 productTypeId)
        {
            Laptop laptop = new Laptop();
            laptop.Id = id;
            laptop.ManufactureId = manufactureId;
            laptop.ProductTypeId = productTypeId;
            return laptop;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Chipset
        {
            get
            {
                return _Chipset;
            }
            set
            {
                OnChipsetChanging(value);
                ReportPropertyChanging("Chipset");
                _Chipset = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Chipset");
                OnChipsetChanged();
            }
        }
        private global::System.String _Chipset;
        partial void OnChipsetChanging(global::System.String value);
        partial void OnChipsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClockSpeed
        {
            get
            {
                return _ClockSpeed;
            }
            set
            {
                OnClockSpeedChanging(value);
                ReportPropertyChanging("ClockSpeed");
                _ClockSpeed = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClockSpeed");
                OnClockSpeedChanged();
            }
        }
        private global::System.String _ClockSpeed;
        partial void OnClockSpeedChanging(global::System.String value);
        partial void OnClockSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cache
        {
            get
            {
                return _Cache;
            }
            set
            {
                OnCacheChanging(value);
                ReportPropertyChanging("Cache");
                _Cache = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cache");
                OnCacheChanged();
            }
        }
        private global::System.String _Cache;
        partial void OnCacheChanging(global::System.String value);
        partial void OnCacheChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HardwareInterface
        {
            get
            {
                return _HardwareInterface;
            }
            set
            {
                OnHardwareInterfaceChanging(value);
                ReportPropertyChanging("HardwareInterface");
                _HardwareInterface = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HardwareInterface");
                OnHardwareInterfaceChanged();
            }
        }
        private global::System.String _HardwareInterface;
        partial void OnHardwareInterfaceChanging(global::System.String value);
        partial void OnHardwareInterfaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RPM
        {
            get
            {
                return _RPM;
            }
            set
            {
                OnRPMChanging(value);
                ReportPropertyChanging("RPM");
                _RPM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RPM");
                OnRPMChanged();
            }
        }
        private global::System.String _RPM;
        partial void OnRPMChanging(global::System.String value);
        partial void OnRPMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HDDCapacity
        {
            get
            {
                return _HDDCapacity;
            }
            set
            {
                OnHDDCapacityChanging(value);
                ReportPropertyChanging("HDDCapacity");
                _HDDCapacity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HDDCapacity");
                OnHDDCapacityChanged();
            }
        }
        private global::System.String _HDDCapacity;
        partial void OnHDDCapacityChanging(global::System.String value);
        partial void OnHDDCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OpticalDrive
        {
            get
            {
                return _OpticalDrive;
            }
            set
            {
                OnOpticalDriveChanging(value);
                ReportPropertyChanging("OpticalDrive");
                _OpticalDrive = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OpticalDrive");
                OnOpticalDriveChanged();
            }
        }
        private global::System.String _OpticalDrive;
        partial void OnOpticalDriveChanging(global::System.String value);
        partial void OnOpticalDriveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemArch
        {
            get
            {
                return _SystemArch;
            }
            set
            {
                OnSystemArchChanging(value);
                ReportPropertyChanging("SystemArch");
                _SystemArch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemArch");
                OnSystemArchChanged();
            }
        }
        private global::System.String _SystemArch;
        partial void OnSystemArchChanging(global::System.String value);
        partial void OnSystemArchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GraphicProcessor
        {
            get
            {
                return _GraphicProcessor;
            }
            set
            {
                OnGraphicProcessorChanging(value);
                ReportPropertyChanging("GraphicProcessor");
                _GraphicProcessor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GraphicProcessor");
                OnGraphicProcessorChanged();
            }
        }
        private global::System.String _GraphicProcessor;
        partial void OnGraphicProcessorChanging(global::System.String value);
        partial void OnGraphicProcessorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Keyboard
        {
            get
            {
                return _Keyboard;
            }
            set
            {
                OnKeyboardChanging(value);
                ReportPropertyChanging("Keyboard");
                _Keyboard = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Keyboard");
                OnKeyboardChanged();
            }
        }
        private global::System.String _Keyboard;
        partial void OnKeyboardChanging(global::System.String value);
        partial void OnKeyboardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Speakers
        {
            get
            {
                return _Speakers;
            }
            set
            {
                OnSpeakersChanging(value);
                ReportPropertyChanging("Speakers");
                _Speakers = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Speakers");
                OnSpeakersChanged();
            }
        }
        private global::System.String _Speakers;
        partial void OnSpeakersChanging(global::System.String value);
        partial void OnSpeakersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sound
        {
            get
            {
                return _Sound;
            }
            set
            {
                OnSoundChanging(value);
                ReportPropertyChanging("Sound");
                _Sound = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sound");
                OnSoundChanged();
            }
        }
        private global::System.String _Sound;
        partial void OnSoundChanging(global::System.String value);
        partial void OnSoundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BatteryCell
        {
            get
            {
                return _BatteryCell;
            }
            set
            {
                OnBatteryCellChanging(value);
                ReportPropertyChanging("BatteryCell");
                _BatteryCell = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BatteryCell");
                OnBatteryCellChanged();
            }
        }
        private global::System.String _BatteryCell;
        partial void OnBatteryCellChanging(global::System.String value);
        partial void OnBatteryCellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String USBPort
        {
            get
            {
                return _USBPort;
            }
            set
            {
                OnUSBPortChanging(value);
                ReportPropertyChanging("USBPort");
                _USBPort = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("USBPort");
                OnUSBPortChanged();
            }
        }
        private global::System.String _USBPort;
        partial void OnUSBPortChanging(global::System.String value);
        partial void OnUSBPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VGAPort
        {
            get
            {
                return _VGAPort;
            }
            set
            {
                OnVGAPortChanging(value);
                ReportPropertyChanging("VGAPort");
                _VGAPort = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VGAPort");
                OnVGAPortChanged();
            }
        }
        private global::System.String _VGAPort;
        partial void OnVGAPortChanging(global::System.String value);
        partial void OnVGAPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HDMIPort
        {
            get
            {
                return _HDMIPort;
            }
            set
            {
                OnHDMIPortChanging(value);
                ReportPropertyChanging("HDMIPort");
                _HDMIPort = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HDMIPort");
                OnHDMIPortChanged();
            }
        }
        private global::System.String _HDMIPort;
        partial void OnHDMIPortChanging(global::System.String value);
        partial void OnHDMIPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RJ45LAN
        {
            get
            {
                return _RJ45LAN;
            }
            set
            {
                OnRJ45LANChanging(value);
                ReportPropertyChanging("RJ45LAN");
                _RJ45LAN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RJ45LAN");
                OnRJ45LANChanged();
            }
        }
        private global::System.String _RJ45LAN;
        partial void OnRJ45LANChanging(global::System.String value);
        partial void OnRJ45LANChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MultiCardSlot
        {
            get
            {
                return _MultiCardSlot;
            }
            set
            {
                OnMultiCardSlotChanging(value);
                ReportPropertyChanging("MultiCardSlot");
                _MultiCardSlot = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MultiCardSlot");
                OnMultiCardSlotChanged();
            }
        }
        private global::System.String _MultiCardSlot;
        partial void OnMultiCardSlotChanging(global::System.String value);
        partial void OnMultiCardSlotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemorySlots
        {
            get
            {
                return _MemorySlots;
            }
            set
            {
                OnMemorySlotsChanging(value);
                ReportPropertyChanging("MemorySlots");
                _MemorySlots = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemorySlots");
                OnMemorySlotsChanged();
            }
        }
        private global::System.String _MemorySlots;
        partial void OnMemorySlotsChanging(global::System.String value);
        partial void OnMemorySlotsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Manufacture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manufacture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manufacture object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static Manufacture CreateManufacture(global::System.Int32 id, global::System.String name, Status status, AuditLog auditLog)
        {
            Manufacture manufacture = new Manufacture();
            manufacture.Id = id;
            manufacture.Name = name;
            manufacture.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            manufacture.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return manufacture;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Mobile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Mobile : ProductModel
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Mobile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="manufactureId">Initial value of the ManufactureId property.</param>
        /// <param name="productTypeId">Initial value of the ProductTypeId property.</param>
        /// <param name="connectivity">Initial value of the Connectivity property.</param>
        public static Mobile CreateMobile(global::System.Int32 id, global::System.Int32 manufactureId, global::System.Int32 productTypeId, Connectivity connectivity)
        {
            Mobile mobile = new Mobile();
            mobile.Id = id;
            mobile.ManufactureId = manufactureId;
            mobile.ProductTypeId = productTypeId;
            mobile.Connectivity = StructuralObject.VerifyComplexObjectIsNotNull(connectivity, "Connectivity");
            return mobile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormFactor
        {
            get
            {
                return _FormFactor;
            }
            set
            {
                OnFormFactorChanging(value);
                ReportPropertyChanging("FormFactor");
                _FormFactor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormFactor");
                OnFormFactorChanged();
            }
        }
        private global::System.String _FormFactor;
        partial void OnFormFactorChanging(global::System.String value);
        partial void OnFormFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CallFeatures
        {
            get
            {
                return _CallFeatures;
            }
            set
            {
                OnCallFeaturesChanging(value);
                ReportPropertyChanging("CallFeatures");
                _CallFeatures = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CallFeatures");
                OnCallFeaturesChanged();
            }
        }
        private global::System.String _CallFeatures;
        partial void OnCallFeaturesChanging(global::System.String value);
        partial void OnCallFeaturesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimSize
        {
            get
            {
                return _SimSize;
            }
            set
            {
                OnSimSizeChanging(value);
                ReportPropertyChanging("SimSize");
                _SimSize = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimSize");
                OnSimSizeChanged();
            }
        }
        private global::System.String _SimSize;
        partial void OnSimSizeChanging(global::System.String value);
        partial void OnSimSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimType
        {
            get
            {
                return _SimType;
            }
            set
            {
                OnSimTypeChanging(value);
                ReportPropertyChanging("SimType");
                _SimType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimType");
                OnSimTypeChanged();
            }
        }
        private global::System.String _SimType;
        partial void OnSimTypeChanging(global::System.String value);
        partial void OnSimTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CallMemory
        {
            get
            {
                return _CallMemory;
            }
            set
            {
                OnCallMemoryChanging(value);
                ReportPropertyChanging("CallMemory");
                _CallMemory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CallMemory");
                OnCallMemoryChanged();
            }
        }
        private global::System.String _CallMemory;
        partial void OnCallMemoryChanging(global::System.String value);
        partial void OnCallMemoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneMemory
        {
            get
            {
                return _PhoneMemory;
            }
            set
            {
                OnPhoneMemoryChanging(value);
                ReportPropertyChanging("PhoneMemory");
                _PhoneMemory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneMemory");
                OnPhoneMemoryChanged();
            }
        }
        private global::System.String _PhoneMemory;
        partial void OnPhoneMemoryChanging(global::System.String value);
        partial void OnPhoneMemoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SMSMemory
        {
            get
            {
                return _SMSMemory;
            }
            set
            {
                OnSMSMemoryChanging(value);
                ReportPropertyChanging("SMSMemory");
                _SMSMemory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SMSMemory");
                OnSMSMemoryChanged();
            }
        }
        private global::System.String _SMSMemory;
        partial void OnSMSMemoryChanging(global::System.String value);
        partial void OnSMSMemoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreinstalledBrowser
        {
            get
            {
                return _PreinstalledBrowser;
            }
            set
            {
                OnPreinstalledBrowserChanging(value);
                ReportPropertyChanging("PreinstalledBrowser");
                _PreinstalledBrowser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreinstalledBrowser");
                OnPreinstalledBrowserChanged();
            }
        }
        private global::System.String _PreinstalledBrowser;
        partial void OnPreinstalledBrowserChanging(global::System.String value);
        partial void OnPreinstalledBrowserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MusicPlayer
        {
            get
            {
                return _MusicPlayer;
            }
            set
            {
                OnMusicPlayerChanging(value);
                ReportPropertyChanging("MusicPlayer");
                _MusicPlayer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MusicPlayer");
                OnMusicPlayerChanged();
            }
        }
        private global::System.String _MusicPlayer;
        partial void OnMusicPlayerChanging(global::System.String value);
        partial void OnMusicPlayerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoPlayer
        {
            get
            {
                return _VideoPlayer;
            }
            set
            {
                OnVideoPlayerChanging(value);
                ReportPropertyChanging("VideoPlayer");
                _VideoPlayer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoPlayer");
                OnVideoPlayerChanged();
            }
        }
        private global::System.String _VideoPlayer;
        partial void OnVideoPlayerChanging(global::System.String value);
        partial void OnVideoPlayerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FM
        {
            get
            {
                return _FM;
            }
            set
            {
                OnFMChanging(value);
                ReportPropertyChanging("FM");
                _FM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FM");
                OnFMChanged();
            }
        }
        private global::System.String _FM;
        partial void OnFMChanging(global::System.String value);
        partial void OnFMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SoundEnhancement
        {
            get
            {
                return _SoundEnhancement;
            }
            set
            {
                OnSoundEnhancementChanging(value);
                ReportPropertyChanging("SoundEnhancement");
                _SoundEnhancement = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SoundEnhancement");
                OnSoundEnhancementChanged();
            }
        }
        private global::System.String _SoundEnhancement;
        partial void OnSoundEnhancementChanging(global::System.String value);
        partial void OnSoundEnhancementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RingTone
        {
            get
            {
                return _RingTone;
            }
            set
            {
                OnRingToneChanging(value);
                ReportPropertyChanging("RingTone");
                _RingTone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RingTone");
                OnRingToneChanged();
            }
        }
        private global::System.String _RingTone;
        partial void OnRingToneChanging(global::System.String value);
        partial void OnRingToneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SARValue
        {
            get
            {
                return _SARValue;
            }
            set
            {
                OnSARValueChanging(value);
                ReportPropertyChanging("SARValue");
                _SARValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SARValue");
                OnSARValueChanged();
            }
        }
        private global::System.String _SARValue;
        partial void OnSARValueChanging(global::System.String value);
        partial void OnSARValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternetFeatures
        {
            get
            {
                return _InternetFeatures;
            }
            set
            {
                OnInternetFeaturesChanging(value);
                ReportPropertyChanging("InternetFeatures");
                _InternetFeatures = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternetFeatures");
                OnInternetFeaturesChanged();
            }
        }
        private global::System.String _InternetFeatures;
        partial void OnInternetFeaturesChanging(global::System.String value);
        partial void OnInternetFeaturesChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Connectivity Connectivity
        {
            get
            {
                _Connectivity = GetValidValue(_Connectivity, "Connectivity", false, _ConnectivityInitialized);
                _ConnectivityInitialized = true;
                return _Connectivity;
            }
            set
            {
                OnConnectivityChanging(value);
                ReportPropertyChanging("Connectivity");
                _Connectivity = SetValidValue(_Connectivity, value, "Connectivity");
                _ConnectivityInitialized = true;
                ReportPropertyChanged("Connectivity");
                OnConnectivityChanged();
            }
        }
        private Connectivity _Connectivity;
        private bool _ConnectivityInitialized;
        partial void OnConnectivityChanging(Connectivity value);
        partial void OnConnectivityChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Office")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(BusinessOffice))]
    [KnownTypeAttribute(typeof(ServiceCentre))]
    [KnownTypeAttribute(typeof(Company))]
    public partial class Office : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Office object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contact1">Initial value of the Contact1 property.</param>
        /// <param name="contact2">Initial value of the Contact2 property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static Office CreateOffice(global::System.Int32 id, Address address, Contact contact1, Contact contact2, Status status, AuditLog auditLog)
        {
            Office office = new Office();
            office.Id = id;
            office.Address = StructuralObject.VerifyComplexObjectIsNotNull(address, "Address");
            office.Contact1 = StructuralObject.VerifyComplexObjectIsNotNull(contact1, "Contact1");
            office.Contact2 = StructuralObject.VerifyComplexObjectIsNotNull(contact2, "Contact2");
            office.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            office.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return office;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPerson
        {
            get
            {
                return _ContactPerson;
            }
            set
            {
                OnContactPersonChanging(value);
                ReportPropertyChanging("ContactPerson");
                _ContactPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPerson");
                OnContactPersonChanged();
            }
        }
        private global::System.String _ContactPerson;
        partial void OnContactPersonChanging(global::System.String value);
        partial void OnContactPersonChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Address Address
        {
            get
            {
                _Address = GetValidValue(_Address, "Address", false, _AddressInitialized);
                _AddressInitialized = true;
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = SetValidValue(_Address, value, "Address");
                _AddressInitialized = true;
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private Address _Address;
        private bool _AddressInitialized;
        partial void OnAddressChanging(Address value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Contact Contact1
        {
            get
            {
                _Contact1 = GetValidValue(_Contact1, "Contact1", false, _Contact1Initialized);
                _Contact1Initialized = true;
                return _Contact1;
            }
            set
            {
                OnContact1Changing(value);
                ReportPropertyChanging("Contact1");
                _Contact1 = SetValidValue(_Contact1, value, "Contact1");
                _Contact1Initialized = true;
                ReportPropertyChanged("Contact1");
                OnContact1Changed();
            }
        }
        private Contact _Contact1;
        private bool _Contact1Initialized;
        partial void OnContact1Changing(Contact value);
        partial void OnContact1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Contact Contact2
        {
            get
            {
                _Contact2 = GetValidValue(_Contact2, "Contact2", false, _Contact2Initialized);
                _Contact2Initialized = true;
                return _Contact2;
            }
            set
            {
                OnContact2Changing(value);
                ReportPropertyChanging("Contact2");
                _Contact2 = SetValidValue(_Contact2, value, "Contact2");
                _Contact2Initialized = true;
                ReportPropertyChanged("Contact2");
                OnContact2Changed();
            }
        }
        private Contact _Contact2;
        private bool _Contact2Initialized;
        partial void OnContact2Changing(Contact value);
        partial void OnContact2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(User))]
    [KnownTypeAttribute(typeof(Customer))]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="presentAddress">Initial value of the PresentAddress property.</param>
        /// <param name="permanentAddress">Initial value of the PermanentAddress property.</param>
        /// <param name="contact">Initial value of the Contact property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static Person CreatePerson(global::System.Int32 id, Address presentAddress, Address permanentAddress, Contact contact, Status status, AuditLog auditLog)
        {
            Person person = new Person();
            person.Id = id;
            person.PresentAddress = StructuralObject.VerifyComplexObjectIsNotNull(presentAddress, "PresentAddress");
            person.PermanentAddress = StructuralObject.VerifyComplexObjectIsNotNull(permanentAddress, "PermanentAddress");
            person.Contact = StructuralObject.VerifyComplexObjectIsNotNull(contact, "Contact");
            person.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            person.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataOfBirth
        {
            get
            {
                return _DataOfBirth;
            }
            set
            {
                OnDataOfBirthChanging(value);
                ReportPropertyChanging("DataOfBirth");
                _DataOfBirth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataOfBirth");
                OnDataOfBirthChanged();
            }
        }
        private global::System.String _DataOfBirth;
        partial void OnDataOfBirthChanging(global::System.String value);
        partial void OnDataOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BloodGroup
        {
            get
            {
                return _BloodGroup;
            }
            set
            {
                OnBloodGroupChanging(value);
                ReportPropertyChanging("BloodGroup");
                _BloodGroup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BloodGroup");
                OnBloodGroupChanged();
            }
        }
        private global::System.String _BloodGroup;
        partial void OnBloodGroupChanging(global::System.String value);
        partial void OnBloodGroupChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Address PresentAddress
        {
            get
            {
                _PresentAddress = GetValidValue(_PresentAddress, "PresentAddress", false, _PresentAddressInitialized);
                _PresentAddressInitialized = true;
                return _PresentAddress;
            }
            set
            {
                OnPresentAddressChanging(value);
                ReportPropertyChanging("PresentAddress");
                _PresentAddress = SetValidValue(_PresentAddress, value, "PresentAddress");
                _PresentAddressInitialized = true;
                ReportPropertyChanged("PresentAddress");
                OnPresentAddressChanged();
            }
        }
        private Address _PresentAddress;
        private bool _PresentAddressInitialized;
        partial void OnPresentAddressChanging(Address value);
        partial void OnPresentAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Address PermanentAddress
        {
            get
            {
                _PermanentAddress = GetValidValue(_PermanentAddress, "PermanentAddress", false, _PermanentAddressInitialized);
                _PermanentAddressInitialized = true;
                return _PermanentAddress;
            }
            set
            {
                OnPermanentAddressChanging(value);
                ReportPropertyChanging("PermanentAddress");
                _PermanentAddress = SetValidValue(_PermanentAddress, value, "PermanentAddress");
                _PermanentAddressInitialized = true;
                ReportPropertyChanged("PermanentAddress");
                OnPermanentAddressChanged();
            }
        }
        private Address _PermanentAddress;
        private bool _PermanentAddressInitialized;
        partial void OnPermanentAddressChanging(Address value);
        partial void OnPermanentAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Contact Contact
        {
            get
            {
                _Contact = GetValidValue(_Contact, "Contact", false, _ContactInitialized);
                _ContactInitialized = true;
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = SetValidValue(_Contact, value, "Contact");
                _ContactInitialized = true;
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private Contact _Contact;
        private bool _ContactInitialized;
        partial void OnContactChanging(Contact value);
        partial void OnContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="ProductColors")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductColors : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductColors object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="hexCode">Initial value of the HexCode property.</param>
        public static ProductColors CreateProductColors(global::System.Int32 id, global::System.String name, global::System.String hexCode)
        {
            ProductColors productColors = new ProductColors();
            productColors.Id = id;
            productColors.Name = name;
            productColors.HexCode = hexCode;
            return productColors;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HexCode
        {
            get
            {
                return _HexCode;
            }
            set
            {
                OnHexCodeChanging(value);
                ReportPropertyChanging("HexCode");
                _HexCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HexCode");
                OnHexCodeChanged();
            }
        }
        private global::System.String _HexCode;
        partial void OnHexCodeChanging(global::System.String value);
        partial void OnHexCodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="ProductHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productItemId">Initial value of the ProductItemId property.</param>
        /// <param name="comments">Initial value of the Comments property.</param>
        /// <param name="logTime">Initial value of the LogTime property.</param>
        /// <param name="logUsername">Initial value of the LogUsername property.</param>
        public static ProductHistory CreateProductHistory(global::System.Int64 id, global::System.Int32 productItemId, global::System.String comments, global::System.DateTime logTime, global::System.String logUsername)
        {
            ProductHistory productHistory = new ProductHistory();
            productHistory.Id = id;
            productHistory.ProductItemId = productItemId;
            productHistory.Comments = comments;
            productHistory.LogTime = logTime;
            productHistory.LogUsername = logUsername;
            return productHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductItemId
        {
            get
            {
                return _ProductItemId;
            }
            set
            {
                OnProductItemIdChanging(value);
                ReportPropertyChanging("ProductItemId");
                _ProductItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductItemId");
                OnProductItemIdChanged();
            }
        }
        private global::System.Int32 _ProductItemId;
        partial void OnProductItemIdChanging(global::System.Int32 value);
        partial void OnProductItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LogTime
        {
            get
            {
                return _LogTime;
            }
            set
            {
                OnLogTimeChanging(value);
                ReportPropertyChanging("LogTime");
                _LogTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogTime");
                OnLogTimeChanged();
            }
        }
        private global::System.DateTime _LogTime;
        partial void OnLogTimeChanging(global::System.DateTime value);
        partial void OnLogTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogUsername
        {
            get
            {
                return _LogUsername;
            }
            set
            {
                OnLogUsernameChanging(value);
                ReportPropertyChanging("LogUsername");
                _LogUsername = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogUsername");
                OnLogUsernameChanged();
            }
        }
        private global::System.String _LogUsername;
        partial void OnLogUsernameChanging(global::System.String value);
        partial void OnLogUsernameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="ProductImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductImage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="productModelId">Initial value of the ProductModelId property.</param>
        public static ProductImage CreateProductImage(global::System.Int32 id, global::System.String name, global::System.String fileName, global::System.Int32 productModelId)
        {
            ProductImage productImage = new ProductImage();
            productImage.Id = id;
            productImage.Name = name;
            productImage.FileName = fileName;
            productImage.ProductModelId = productModelId;
            return productImage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductModelId
        {
            get
            {
                return _ProductModelId;
            }
            set
            {
                OnProductModelIdChanging(value);
                ReportPropertyChanging("ProductModelId");
                _ProductModelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductModelId");
                OnProductModelIdChanged();
            }
        }
        private global::System.Int32 _ProductModelId;
        partial void OnProductModelIdChanging(global::System.Int32 value);
        partial void OnProductModelIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="ProductItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productModelId">Initial value of the ProductModelId property.</param>
        /// <param name="productColorsId">Initial value of the ProductColorsId property.</param>
        public static ProductItem CreateProductItem(global::System.Int32 id, global::System.Int32 productModelId, global::System.Int32 productColorsId)
        {
            ProductItem productItem = new ProductItem();
            productItem.Id = id;
            productItem.ProductModelId = productModelId;
            productItem.ProductColorsId = productColorsId;
            return productItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductModelId
        {
            get
            {
                return _ProductModelId;
            }
            set
            {
                OnProductModelIdChanging(value);
                ReportPropertyChanging("ProductModelId");
                _ProductModelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductModelId");
                OnProductModelIdChanged();
            }
        }
        private global::System.Int32 _ProductModelId;
        partial void OnProductModelIdChanging(global::System.Int32 value);
        partial void OnProductModelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                OnWarehouseIdChanging(value);
                ReportPropertyChanging("WarehouseId");
                _WarehouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseId");
                OnWarehouseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseId;
        partial void OnWarehouseIdChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StockhouseId
        {
            get
            {
                return _StockhouseId;
            }
            set
            {
                OnStockhouseIdChanging(value);
                ReportPropertyChanging("StockhouseId");
                _StockhouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockhouseId");
                OnStockhouseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StockhouseId;
        partial void OnStockhouseIdChanging(Nullable<global::System.Int32> value);
        partial void OnStockhouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DistributorId
        {
            get
            {
                return _DistributorId;
            }
            set
            {
                OnDistributorIdChanging(value);
                ReportPropertyChanging("DistributorId");
                _DistributorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistributorId");
                OnDistributorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DistributorId;
        partial void OnDistributorIdChanging(Nullable<global::System.Int32> value);
        partial void OnDistributorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DealersId
        {
            get
            {
                return _DealersId;
            }
            set
            {
                OnDealersIdChanging(value);
                ReportPropertyChanging("DealersId");
                _DealersId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealersId");
                OnDealersIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DealersId;
        partial void OnDealersIdChanging(Nullable<global::System.Int32> value);
        partial void OnDealersIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RetailerId
        {
            get
            {
                return _RetailerId;
            }
            set
            {
                OnRetailerIdChanging(value);
                ReportPropertyChanging("RetailerId");
                _RetailerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RetailerId");
                OnRetailerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RetailerId;
        partial void OnRetailerIdChanging(Nullable<global::System.Int32> value);
        partial void OnRetailerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNumber
        {
            get
            {
                return _SerialNumber;
            }
            set
            {
                OnSerialNumberChanging(value);
                ReportPropertyChanging("SerialNumber");
                _SerialNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNumber");
                OnSerialNumberChanged();
            }
        }
        private global::System.String _SerialNumber;
        partial void OnSerialNumberChanging(global::System.String value);
        partial void OnSerialNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IMEI1
        {
            get
            {
                return _IMEI1;
            }
            set
            {
                OnIMEI1Changing(value);
                ReportPropertyChanging("IMEI1");
                _IMEI1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IMEI1");
                OnIMEI1Changed();
            }
        }
        private global::System.String _IMEI1;
        partial void OnIMEI1Changing(global::System.String value);
        partial void OnIMEI1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IMEI2
        {
            get
            {
                return _IMEI2;
            }
            set
            {
                OnIMEI2Changing(value);
                ReportPropertyChanging("IMEI2");
                _IMEI2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IMEI2");
                OnIMEI2Changed();
            }
        }
        private global::System.String _IMEI2;
        partial void OnIMEI2Changing(global::System.String value);
        partial void OnIMEI2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartNumber
        {
            get
            {
                return _PartNumber;
            }
            set
            {
                OnPartNumberChanging(value);
                ReportPropertyChanging("PartNumber");
                _PartNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartNumber");
                OnPartNumberChanged();
            }
        }
        private global::System.String _PartNumber;
        partial void OnPartNumberChanging(global::System.String value);
        partial void OnPartNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductColorsId
        {
            get
            {
                return _ProductColorsId;
            }
            set
            {
                OnProductColorsIdChanging(value);
                ReportPropertyChanging("ProductColorsId");
                _ProductColorsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductColorsId");
                OnProductColorsIdChanged();
            }
        }
        private global::System.Int32 _ProductColorsId;
        partial void OnProductColorsIdChanging(global::System.Int32 value);
        partial void OnProductColorsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductWarrantyId
        {
            get
            {
                return _ProductWarrantyId;
            }
            set
            {
                OnProductWarrantyIdChanging(value);
                ReportPropertyChanging("ProductWarrantyId");
                _ProductWarrantyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductWarrantyId");
                OnProductWarrantyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductWarrantyId;
        partial void OnProductWarrantyIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductWarrantyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductItemProductModel", "ProductModel")]
        public ProductModel ProductModel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductModel>("NikcronModel.ProductItemProductModel", "ProductModel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductModel>("NikcronModel.ProductItemProductModel", "ProductModel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductModel> ProductModelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductModel>("NikcronModel.ProductItemProductModel", "ProductModel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductModel>("NikcronModel.ProductItemProductModel", "ProductModel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductItemStockhouse", "Stockhouse")]
        public Stockhouse Stockhouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stockhouse>("NikcronModel.ProductItemStockhouse", "Stockhouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stockhouse>("NikcronModel.ProductItemStockhouse", "Stockhouse").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stockhouse> StockhouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stockhouse>("NikcronModel.ProductItemStockhouse", "Stockhouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stockhouse>("NikcronModel.ProductItemStockhouse", "Stockhouse", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductItemDistributor", "Distributor")]
        public Distributor Distributor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Distributor>("NikcronModel.ProductItemDistributor", "Distributor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Distributor>("NikcronModel.ProductItemDistributor", "Distributor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Distributor> DistributorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Distributor>("NikcronModel.ProductItemDistributor", "Distributor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Distributor>("NikcronModel.ProductItemDistributor", "Distributor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "DealersProductItem", "Dealers")]
        public Dealers Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealers>("NikcronModel.DealersProductItem", "Dealers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealers>("NikcronModel.DealersProductItem", "Dealers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealers> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealers>("NikcronModel.DealersProductItem", "Dealers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealers>("NikcronModel.DealersProductItem", "Dealers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductItemRetailer", "Retailer")]
        public Retailer Retailer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Retailer>("NikcronModel.ProductItemRetailer", "Retailer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Retailer>("NikcronModel.ProductItemRetailer", "Retailer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Retailer> RetailerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Retailer>("NikcronModel.ProductItemRetailer", "Retailer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Retailer>("NikcronModel.ProductItemRetailer", "Retailer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductHistoryProductItem", "ProductHistory")]
        public EntityCollection<ProductHistory> ProductHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductHistory>("NikcronModel.ProductHistoryProductItem", "ProductHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductHistory>("NikcronModel.ProductHistoryProductItem", "ProductHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "SalesProductItem", "Sales")]
        public Sale Sale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("NikcronModel.SalesProductItem", "Sales").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("NikcronModel.SalesProductItem", "Sales").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sale> SaleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("NikcronModel.SalesProductItem", "Sales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sale>("NikcronModel.SalesProductItem", "Sales", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductItemProductColors", "ProductColors")]
        public ProductColors ProductColor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductColors>("NikcronModel.ProductItemProductColors", "ProductColors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductColors>("NikcronModel.ProductItemProductColors", "ProductColors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductColors> ProductColorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductColors>("NikcronModel.ProductItemProductColors", "ProductColors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductColors>("NikcronModel.ProductItemProductColors", "ProductColors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductItemProductWarranty", "ProductWarranty")]
        public ProductWarranty ProductWarranty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductWarranty>("NikcronModel.ProductItemProductWarranty", "ProductWarranty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductWarranty>("NikcronModel.ProductItemProductWarranty", "ProductWarranty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductWarranty> ProductWarrantyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductWarranty>("NikcronModel.ProductItemProductWarranty", "ProductWarranty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductWarranty>("NikcronModel.ProductItemProductWarranty", "ProductWarranty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="ProductModel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Mobile))]
    [KnownTypeAttribute(typeof(Tablet))]
    [KnownTypeAttribute(typeof(Laptop))]
    public partial class ProductModel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductModel object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="manufactureId">Initial value of the ManufactureId property.</param>
        /// <param name="productTypeId">Initial value of the ProductTypeId property.</param>
        public static ProductModel CreateProductModel(global::System.Int32 id, global::System.Int32 manufactureId, global::System.Int32 productTypeId)
        {
            ProductModel productModel = new ProductModel();
            productModel.Id = id;
            productModel.ManufactureId = manufactureId;
            productModel.ProductTypeId = productTypeId;
            return productModel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModelNumber
        {
            get
            {
                return _ModelNumber;
            }
            set
            {
                OnModelNumberChanging(value);
                ReportPropertyChanging("ModelNumber");
                _ModelNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModelNumber");
                OnModelNumberChanged();
            }
        }
        private global::System.String _ModelNumber;
        partial void OnModelNumberChanging(global::System.String value);
        partial void OnModelNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModelName
        {
            get
            {
                return _ModelName;
            }
            set
            {
                OnModelNameChanging(value);
                ReportPropertyChanging("ModelName");
                _ModelName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModelName");
                OnModelNameChanged();
            }
        }
        private global::System.String _ModelName;
        partial void OnModelNameChanging(global::System.String value);
        partial void OnModelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManufactureId
        {
            get
            {
                return _ManufactureId;
            }
            set
            {
                OnManufactureIdChanging(value);
                ReportPropertyChanging("ManufactureId");
                _ManufactureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufactureId");
                OnManufactureIdChanged();
            }
        }
        private global::System.Int32 _ManufactureId;
        partial void OnManufactureIdChanging(global::System.Int32 value);
        partial void OnManufactureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeId
        {
            get
            {
                return _ProductTypeId;
            }
            set
            {
                OnProductTypeIdChanging(value);
                ReportPropertyChanging("ProductTypeId");
                _ProductTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductTypeId");
                OnProductTypeIdChanged();
            }
        }
        private global::System.Int32 _ProductTypeId;
        partial void OnProductTypeIdChanging(global::System.Int32 value);
        partial void OnProductTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Processor
        {
            get
            {
                return _Processor;
            }
            set
            {
                OnProcessorChanging(value);
                ReportPropertyChanging("Processor");
                _Processor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Processor");
                OnProcessorChanged();
            }
        }
        private global::System.String _Processor;
        partial void OnProcessorChanging(global::System.String value);
        partial void OnProcessorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memory
        {
            get
            {
                return _Memory;
            }
            set
            {
                OnMemoryChanging(value);
                ReportPropertyChanging("Memory");
                _Memory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memory");
                OnMemoryChanged();
            }
        }
        private global::System.String _Memory;
        partial void OnMemoryChanging(global::System.String value);
        partial void OnMemoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OperatingSystem
        {
            get
            {
                return _OperatingSystem;
            }
            set
            {
                OnOperatingSystemChanging(value);
                ReportPropertyChanging("OperatingSystem");
                _OperatingSystem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OperatingSystem");
                OnOperatingSystemChanged();
            }
        }
        private global::System.String _OperatingSystem;
        partial void OnOperatingSystemChanging(global::System.String value);
        partial void OnOperatingSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OSVersion
        {
            get
            {
                return _OSVersion;
            }
            set
            {
                OnOSVersionChanging(value);
                ReportPropertyChanging("OSVersion");
                _OSVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OSVersion");
                OnOSVersionChanged();
            }
        }
        private global::System.String _OSVersion;
        partial void OnOSVersionChanging(global::System.String value);
        partial void OnOSVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalStorage
        {
            get
            {
                return _InternalStorage;
            }
            set
            {
                OnInternalStorageChanging(value);
                ReportPropertyChanging("InternalStorage");
                _InternalStorage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalStorage");
                OnInternalStorageChanged();
            }
        }
        private global::System.String _InternalStorage;
        partial void OnInternalStorageChanging(global::System.String value);
        partial void OnInternalStorageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalStorage
        {
            get
            {
                return _ExternalStorage;
            }
            set
            {
                OnExternalStorageChanging(value);
                ReportPropertyChanging("ExternalStorage");
                _ExternalStorage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalStorage");
                OnExternalStorageChanged();
            }
        }
        private global::System.String _ExternalStorage;
        partial void OnExternalStorageChanging(global::System.String value);
        partial void OnExternalStorageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayType
        {
            get
            {
                return _DisplayType;
            }
            set
            {
                OnDisplayTypeChanging(value);
                ReportPropertyChanging("DisplayType");
                _DisplayType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayType");
                OnDisplayTypeChanged();
            }
        }
        private global::System.String _DisplayType;
        partial void OnDisplayTypeChanging(global::System.String value);
        partial void OnDisplayTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplaySize
        {
            get
            {
                return _DisplaySize;
            }
            set
            {
                OnDisplaySizeChanging(value);
                ReportPropertyChanging("DisplaySize");
                _DisplaySize = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplaySize");
                OnDisplaySizeChanged();
            }
        }
        private global::System.String _DisplaySize;
        partial void OnDisplaySizeChanging(global::System.String value);
        partial void OnDisplaySizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayResolution
        {
            get
            {
                return _DisplayResolution;
            }
            set
            {
                OnDisplayResolutionChanging(value);
                ReportPropertyChanging("DisplayResolution");
                _DisplayResolution = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayResolution");
                OnDisplayResolutionChanged();
            }
        }
        private global::System.String _DisplayResolution;
        partial void OnDisplayResolutionChanging(global::System.String value);
        partial void OnDisplayResolutionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dimension
        {
            get
            {
                return _Dimension;
            }
            set
            {
                OnDimensionChanging(value);
                ReportPropertyChanging("Dimension");
                _Dimension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dimension");
                OnDimensionChanged();
            }
        }
        private global::System.String _Dimension;
        partial void OnDimensionChanging(global::System.String value);
        partial void OnDimensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.String _Weight;
        partial void OnWeightChanging(global::System.String value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BatteryType
        {
            get
            {
                return _BatteryType;
            }
            set
            {
                OnBatteryTypeChanging(value);
                ReportPropertyChanging("BatteryType");
                _BatteryType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BatteryType");
                OnBatteryTypeChanged();
            }
        }
        private global::System.String _BatteryType;
        partial void OnBatteryTypeChanging(global::System.String value);
        partial void OnBatteryTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BatteryStandBy
        {
            get
            {
                return _BatteryStandBy;
            }
            set
            {
                OnBatteryStandByChanging(value);
                ReportPropertyChanging("BatteryStandBy");
                _BatteryStandBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatteryStandBy");
                OnBatteryStandByChanged();
            }
        }
        private Nullable<global::System.Double> _BatteryStandBy;
        partial void OnBatteryStandByChanging(Nullable<global::System.Double> value);
        partial void OnBatteryStandByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrimaryCamera
        {
            get
            {
                return _PrimaryCamera;
            }
            set
            {
                OnPrimaryCameraChanging(value);
                ReportPropertyChanging("PrimaryCamera");
                _PrimaryCamera = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrimaryCamera");
                OnPrimaryCameraChanged();
            }
        }
        private global::System.String _PrimaryCamera;
        partial void OnPrimaryCameraChanging(global::System.String value);
        partial void OnPrimaryCameraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondryCamera
        {
            get
            {
                return _SecondryCamera;
            }
            set
            {
                OnSecondryCameraChanging(value);
                ReportPropertyChanging("SecondryCamera");
                _SecondryCamera = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecondryCamera");
                OnSecondryCameraChanged();
            }
        }
        private global::System.String _SecondryCamera;
        partial void OnSecondryCameraChanging(global::System.String value);
        partial void OnSecondryCameraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoRecording
        {
            get
            {
                return _VideoRecording;
            }
            set
            {
                OnVideoRecordingChanging(value);
                ReportPropertyChanging("VideoRecording");
                _VideoRecording = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoRecording");
                OnVideoRecordingChanged();
            }
        }
        private global::System.String _VideoRecording;
        partial void OnVideoRecordingChanging(global::System.String value);
        partial void OnVideoRecordingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WiFi
        {
            get
            {
                return _WiFi;
            }
            set
            {
                OnWiFiChanging(value);
                ReportPropertyChanging("WiFi");
                _WiFi = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WiFi");
                OnWiFiChanged();
            }
        }
        private global::System.String _WiFi;
        partial void OnWiFiChanging(global::System.String value);
        partial void OnWiFiChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BatteryCapacity
        {
            get
            {
                return _BatteryCapacity;
            }
            set
            {
                OnBatteryCapacityChanging(value);
                ReportPropertyChanging("BatteryCapacity");
                _BatteryCapacity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BatteryCapacity");
                OnBatteryCapacityChanged();
            }
        }
        private global::System.String _BatteryCapacity;
        partial void OnBatteryCapacityChanging(global::System.String value);
        partial void OnBatteryCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NoteSummary
        {
            get
            {
                return _NoteSummary;
            }
            set
            {
                OnNoteSummaryChanging(value);
                ReportPropertyChanging("NoteSummary");
                _NoteSummary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NoteSummary");
                OnNoteSummaryChanged();
            }
        }
        private global::System.String _NoteSummary;
        partial void OnNoteSummaryChanging(global::System.String value);
        partial void OnNoteSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarrantySummary
        {
            get
            {
                return _WarrantySummary;
            }
            set
            {
                OnWarrantySummaryChanging(value);
                ReportPropertyChanging("WarrantySummary");
                _WarrantySummary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarrantySummary");
                OnWarrantySummaryChanged();
            }
        }
        private global::System.String _WarrantySummary;
        partial void OnWarrantySummaryChanging(global::System.String value);
        partial void OnWarrantySummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InBox
        {
            get
            {
                return _InBox;
            }
            set
            {
                OnInBoxChanging(value);
                ReportPropertyChanging("InBox");
                _InBox = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InBox");
                OnInBoxChanged();
            }
        }
        private global::System.String _InBox;
        partial void OnInBoxChanging(global::System.String value);
        partial void OnInBoxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ProductDate
        {
            get
            {
                return _ProductDate;
            }
            set
            {
                OnProductDateChanging(value);
                ReportPropertyChanging("ProductDate");
                _ProductDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductDate");
                OnProductDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ProductDate;
        partial void OnProductDateChanging(Nullable<global::System.DateTime> value);
        partial void OnProductDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductModelManufacture", "Manufacture")]
        public Manufacture Manufacture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacture>("NikcronModel.ProductModelManufacture", "Manufacture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacture>("NikcronModel.ProductModelManufacture", "Manufacture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Manufacture> ManufactureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacture>("NikcronModel.ProductModelManufacture", "Manufacture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Manufacture>("NikcronModel.ProductModelManufacture", "Manufacture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductModelProductType", "ProductType")]
        public ProductType ProductType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("NikcronModel.ProductModelProductType", "ProductType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("NikcronModel.ProductModelProductType", "ProductType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductType> ProductTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("NikcronModel.ProductModelProductType", "ProductType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductType>("NikcronModel.ProductModelProductType", "ProductType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductModelProductColors", "ProductColors")]
        public EntityCollection<ProductColors> ProductColors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductColors>("NikcronModel.ProductModelProductColors", "ProductColors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductColors>("NikcronModel.ProductModelProductColors", "ProductColors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ProductModelProductImage", "ProductImage")]
        public EntityCollection<ProductImage> ProductImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductImage>("NikcronModel.ProductModelProductImage", "ProductImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductImage>("NikcronModel.ProductModelProductImage", "ProductImage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="ProductType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static ProductType CreateProductType(global::System.Int32 id, global::System.String name, Status status, AuditLog auditLog)
        {
            ProductType productType = new ProductType();
            productType.Id = id;
            productType.Name = name;
            productType.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            productType.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return productType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="ProductWarranty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductWarranty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductWarranty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="warrantyNumber">Initial value of the WarrantyNumber property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static ProductWarranty CreateProductWarranty(global::System.Int32 id, global::System.String warrantyNumber, global::System.String name, global::System.String description, global::System.Int32 period, Status status, AuditLog auditLog)
        {
            ProductWarranty productWarranty = new ProductWarranty();
            productWarranty.Id = id;
            productWarranty.WarrantyNumber = warrantyNumber;
            productWarranty.Name = name;
            productWarranty.Description = description;
            productWarranty.Period = period;
            productWarranty.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            productWarranty.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return productWarranty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarrantyNumber
        {
            get
            {
                return _WarrantyNumber;
            }
            set
            {
                OnWarrantyNumberChanging(value);
                ReportPropertyChanging("WarrantyNumber");
                _WarrantyNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WarrantyNumber");
                OnWarrantyNumberChanged();
            }
        }
        private global::System.String _WarrantyNumber;
        partial void OnWarrantyNumberChanging(global::System.String value);
        partial void OnWarrantyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Int32 _Period;
        partial void OnPeriodChanging(global::System.Int32 value);
        partial void OnPeriodChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Retailer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Retailer : BusinessOffice
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Retailer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contact1">Initial value of the Contact1 property.</param>
        /// <param name="contact2">Initial value of the Contact2 property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        /// <param name="dealersId">Initial value of the DealersId property.</param>
        public static Retailer CreateRetailer(global::System.Int32 id, Address address, Contact contact1, Contact contact2, Status status, AuditLog auditLog, global::System.Int32 dealersId)
        {
            Retailer retailer = new Retailer();
            retailer.Id = id;
            retailer.Address = StructuralObject.VerifyComplexObjectIsNotNull(address, "Address");
            retailer.Contact1 = StructuralObject.VerifyComplexObjectIsNotNull(contact1, "Contact1");
            retailer.Contact2 = StructuralObject.VerifyComplexObjectIsNotNull(contact2, "Contact2");
            retailer.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            retailer.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            retailer.DealersId = dealersId;
            return retailer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealersId
        {
            get
            {
                return _DealersId;
            }
            set
            {
                OnDealersIdChanging(value);
                ReportPropertyChanging("DealersId");
                _DealersId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealersId");
                OnDealersIdChanged();
            }
        }
        private global::System.Int32 _DealersId;
        partial void OnDealersIdChanging(global::System.Int32 value);
        partial void OnDealersIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "DealersRetailer", "Dealers")]
        public Dealers Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealers>("NikcronModel.DealersRetailer", "Dealers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealers>("NikcronModel.DealersRetailer", "Dealers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealers> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealers>("NikcronModel.DealersRetailer", "Dealers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealers>("NikcronModel.DealersRetailer", "Dealers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="ReturnType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReturnType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReturnType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static ReturnType CreateReturnType(global::System.Int32 id, global::System.String name, Status status, AuditLog auditLog)
        {
            ReturnType returnType = new ReturnType();
            returnType.Id = id;
            returnType.Name = name;
            returnType.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            returnType.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return returnType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="moduleAccess">Initial value of the ModuleAccess property.</param>
        /// <param name="readAccess">Initial value of the ReadAccess property.</param>
        /// <param name="writeAccess">Initial value of the WriteAccess property.</param>
        /// <param name="deleteAccess">Initial value of the DeleteAccess property.</param>
        public static Role CreateRole(global::System.Int16 id, global::System.String name, global::System.String moduleAccess, global::System.String readAccess, global::System.String writeAccess, global::System.String deleteAccess)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            role.ModuleAccess = moduleAccess;
            role.ReadAccess = readAccess;
            role.WriteAccess = writeAccess;
            role.DeleteAccess = deleteAccess;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int16 _Id;
        partial void OnIdChanging(global::System.Int16 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleAccess
        {
            get
            {
                return _ModuleAccess;
            }
            set
            {
                OnModuleAccessChanging(value);
                ReportPropertyChanging("ModuleAccess");
                _ModuleAccess = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModuleAccess");
                OnModuleAccessChanged();
            }
        }
        private global::System.String _ModuleAccess;
        partial void OnModuleAccessChanging(global::System.String value);
        partial void OnModuleAccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReadAccess
        {
            get
            {
                return _ReadAccess;
            }
            set
            {
                OnReadAccessChanging(value);
                ReportPropertyChanging("ReadAccess");
                _ReadAccess = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReadAccess");
                OnReadAccessChanged();
            }
        }
        private global::System.String _ReadAccess;
        partial void OnReadAccessChanging(global::System.String value);
        partial void OnReadAccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WriteAccess
        {
            get
            {
                return _WriteAccess;
            }
            set
            {
                OnWriteAccessChanging(value);
                ReportPropertyChanging("WriteAccess");
                _WriteAccess = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WriteAccess");
                OnWriteAccessChanged();
            }
        }
        private global::System.String _WriteAccess;
        partial void OnWriteAccessChanging(global::System.String value);
        partial void OnWriteAccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeleteAccess
        {
            get
            {
                return _DeleteAccess;
            }
            set
            {
                OnDeleteAccessChanging(value);
                ReportPropertyChanging("DeleteAccess");
                _DeleteAccess = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeleteAccess");
                OnDeleteAccessChanged();
            }
        }
        private global::System.String _DeleteAccess;
        partial void OnDeleteAccessChanging(global::System.String value);
        partial void OnDeleteAccessChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Sale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sale object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="invoiceNumber">Initial value of the InvoiceNumber property.</param>
        /// <param name="invoicedDate">Initial value of the InvoicedDate property.</param>
        public static Sale CreateSale(global::System.Int32 id, global::System.String invoiceNumber, global::System.DateTime invoicedDate)
        {
            Sale sale = new Sale();
            sale.Id = id;
            sale.InvoiceNumber = invoiceNumber;
            sale.InvoicedDate = invoicedDate;
            return sale;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private global::System.String _InvoiceNumber;
        partial void OnInvoiceNumberChanging(global::System.String value);
        partial void OnInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InvoicedDate
        {
            get
            {
                return _InvoicedDate;
            }
            set
            {
                OnInvoicedDateChanging(value);
                ReportPropertyChanging("InvoicedDate");
                _InvoicedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoicedDate");
                OnInvoicedDateChanged();
            }
        }
        private global::System.DateTime _InvoicedDate;
        partial void OnInvoicedDateChanging(global::System.DateTime value);
        partial void OnInvoicedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Double> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Double> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Double> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Double> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Double> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerId;
        partial void OnCustomerIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> WarrantyStart
        {
            get
            {
                return _WarrantyStart;
            }
            set
            {
                OnWarrantyStartChanging(value);
                ReportPropertyChanging("WarrantyStart");
                _WarrantyStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarrantyStart");
                OnWarrantyStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _WarrantyStart;
        partial void OnWarrantyStartChanging(Nullable<global::System.DateTime> value);
        partial void OnWarrantyStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> WarrantyEnd
        {
            get
            {
                return _WarrantyEnd;
            }
            set
            {
                OnWarrantyEndChanging(value);
                ReportPropertyChanging("WarrantyEnd");
                _WarrantyEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarrantyEnd");
                OnWarrantyEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _WarrantyEnd;
        partial void OnWarrantyEndChanging(Nullable<global::System.DateTime> value);
        partial void OnWarrantyEndChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "SalesProductItem", "ProductItem")]
        public ProductItem ProductItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductItem>("NikcronModel.SalesProductItem", "ProductItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductItem>("NikcronModel.SalesProductItem", "ProductItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductItem> ProductItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductItem>("NikcronModel.SalesProductItem", "ProductItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductItem>("NikcronModel.SalesProductItem", "ProductItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "SalesUser", "User")]
        public User SellingStaff
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NikcronModel.SalesUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NikcronModel.SalesUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SellingStaffReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NikcronModel.SalesUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NikcronModel.SalesUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "SaleProductWarranty", "ProductWarranty")]
        public ProductWarranty ProductWarranty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductWarranty>("NikcronModel.SaleProductWarranty", "ProductWarranty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductWarranty>("NikcronModel.SaleProductWarranty", "ProductWarranty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductWarranty> ProductWarrantyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductWarranty>("NikcronModel.SaleProductWarranty", "ProductWarranty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductWarranty>("NikcronModel.SaleProductWarranty", "ProductWarranty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "SaleCustomer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("NikcronModel.SaleCustomer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("NikcronModel.SaleCustomer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("NikcronModel.SaleCustomer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("NikcronModel.SaleCustomer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ServiceSale", "Service")]
        public EntityCollection<Service> Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Service>("NikcronModel.ServiceSale", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Service>("NikcronModel.ServiceSale", "Service", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="SalesReturn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesReturn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesReturn object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        /// <param name="returnTypeId">Initial value of the ReturnTypeId property.</param>
        public static SalesReturn CreateSalesReturn(global::System.Int32 id, global::System.Int32 userId, Status status, AuditLog auditLog, global::System.Int32 returnTypeId)
        {
            SalesReturn salesReturn = new SalesReturn();
            salesReturn.Id = id;
            salesReturn.UserId = userId;
            salesReturn.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            salesReturn.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            salesReturn.ReturnTypeId = returnTypeId;
            return salesReturn;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Commands
        {
            get
            {
                return _Commands;
            }
            set
            {
                OnCommandsChanging(value);
                ReportPropertyChanging("Commands");
                _Commands = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Commands");
                OnCommandsChanged();
            }
        }
        private global::System.String _Commands;
        partial void OnCommandsChanging(global::System.String value);
        partial void OnCommandsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReturnTypeId
        {
            get
            {
                return _ReturnTypeId;
            }
            set
            {
                OnReturnTypeIdChanging(value);
                ReportPropertyChanging("ReturnTypeId");
                _ReturnTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnTypeId");
                OnReturnTypeIdChanged();
            }
        }
        private global::System.Int32 _ReturnTypeId;
        partial void OnReturnTypeIdChanging(global::System.Int32 value);
        partial void OnReturnTypeIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "SalesReturnSale", "Sale")]
        public Sale Sale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("NikcronModel.SalesReturnSale", "Sale").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("NikcronModel.SalesReturnSale", "Sale").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sale> SaleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("NikcronModel.SalesReturnSale", "Sale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sale>("NikcronModel.SalesReturnSale", "Sale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "SalesReturnUser", "User")]
        public User ReturningStaff
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NikcronModel.SalesReturnUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NikcronModel.SalesReturnUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ReturningStaffReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NikcronModel.SalesReturnUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NikcronModel.SalesReturnUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "SalesReturnReturnType", "ReturnType")]
        public ReturnType ReturnType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReturnType>("NikcronModel.SalesReturnReturnType", "ReturnType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReturnType>("NikcronModel.SalesReturnReturnType", "ReturnType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReturnType> ReturnTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReturnType>("NikcronModel.SalesReturnReturnType", "ReturnType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReturnType>("NikcronModel.SalesReturnReturnType", "ReturnType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Service : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Service object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="commands">Initial value of the Commands property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        /// <param name="serviceTypeId">Initial value of the ServiceTypeId property.</param>
        /// <param name="serviceCentreId">Initial value of the ServiceCentreId property.</param>
        public static Service CreateService(global::System.Int32 id, global::System.String commands, global::System.Int32 userId, Status status, AuditLog auditLog, global::System.Int32 serviceTypeId, global::System.Int32 serviceCentreId)
        {
            Service service = new Service();
            service.Id = id;
            service.Commands = commands;
            service.UserId = userId;
            service.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            service.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            service.ServiceTypeId = serviceTypeId;
            service.ServiceCentreId = serviceCentreId;
            return service;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Commands
        {
            get
            {
                return _Commands;
            }
            set
            {
                OnCommandsChanging(value);
                ReportPropertyChanging("Commands");
                _Commands = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Commands");
                OnCommandsChanged();
            }
        }
        private global::System.String _Commands;
        partial void OnCommandsChanging(global::System.String value);
        partial void OnCommandsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SaleId
        {
            get
            {
                return _SaleId;
            }
            set
            {
                OnSaleIdChanging(value);
                ReportPropertyChanging("SaleId");
                _SaleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleId");
                OnSaleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SaleId;
        partial void OnSaleIdChanging(Nullable<global::System.Int32> value);
        partial void OnSaleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceTypeId
        {
            get
            {
                return _ServiceTypeId;
            }
            set
            {
                OnServiceTypeIdChanging(value);
                ReportPropertyChanging("ServiceTypeId");
                _ServiceTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceTypeId");
                OnServiceTypeIdChanged();
            }
        }
        private global::System.Int32 _ServiceTypeId;
        partial void OnServiceTypeIdChanging(global::System.Int32 value);
        partial void OnServiceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceCentreId
        {
            get
            {
                return _ServiceCentreId;
            }
            set
            {
                OnServiceCentreIdChanging(value);
                ReportPropertyChanging("ServiceCentreId");
                _ServiceCentreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceCentreId");
                OnServiceCentreIdChanged();
            }
        }
        private global::System.Int32 _ServiceCentreId;
        partial void OnServiceCentreIdChanging(global::System.Int32 value);
        partial void OnServiceCentreIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ServiceSale", "Sale")]
        public Sale Sale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("NikcronModel.ServiceSale", "Sale").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("NikcronModel.ServiceSale", "Sale").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sale> SaleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("NikcronModel.ServiceSale", "Sale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sale>("NikcronModel.ServiceSale", "Sale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ServiceUser", "User")]
        public User ServiceEmployee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NikcronModel.ServiceUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NikcronModel.ServiceUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ServiceEmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NikcronModel.ServiceUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NikcronModel.ServiceUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ServiceServiceType", "ServiceType")]
        public ServiceType ServiceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceType>("NikcronModel.ServiceServiceType", "ServiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceType>("NikcronModel.ServiceServiceType", "ServiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceType> ServiceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceType>("NikcronModel.ServiceServiceType", "ServiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceType>("NikcronModel.ServiceServiceType", "ServiceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "ServiceServiceCentre", "ServiceCentre")]
        public ServiceCentre ServiceCentre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceCentre>("NikcronModel.ServiceServiceCentre", "ServiceCentre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceCentre>("NikcronModel.ServiceServiceCentre", "ServiceCentre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceCentre> ServiceCentreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceCentre>("NikcronModel.ServiceServiceCentre", "ServiceCentre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceCentre>("NikcronModel.ServiceServiceCentre", "ServiceCentre", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="ServiceCentre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceCentre : Office
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceCentre object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contact1">Initial value of the Contact1 property.</param>
        /// <param name="contact2">Initial value of the Contact2 property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static ServiceCentre CreateServiceCentre(global::System.Int32 id, Address address, Contact contact1, Contact contact2, Status status, AuditLog auditLog)
        {
            ServiceCentre serviceCentre = new ServiceCentre();
            serviceCentre.Id = id;
            serviceCentre.Address = StructuralObject.VerifyComplexObjectIsNotNull(address, "Address");
            serviceCentre.Contact1 = StructuralObject.VerifyComplexObjectIsNotNull(contact1, "Contact1");
            serviceCentre.Contact2 = StructuralObject.VerifyComplexObjectIsNotNull(contact2, "Contact2");
            serviceCentre.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            serviceCentre.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return serviceCentre;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="ServiceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static ServiceType CreateServiceType(global::System.Int32 id, global::System.String name, Status status, AuditLog auditLog)
        {
            ServiceType serviceType = new ServiceType();
            serviceType.Id = id;
            serviceType.Name = name;
            serviceType.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            serviceType.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return serviceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        public static State CreateState(global::System.Int32 id, global::System.String name, Status status, AuditLog auditLog, global::System.Int16 countryId)
        {
            State state = new State();
            state.Id = id;
            state.Name = name;
            state.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            state.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            state.CountryId = countryId;
            return state;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int16 _CountryId;
        partial void OnCountryIdChanging(global::System.Int16 value);
        partial void OnCountryIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "StateCity", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("NikcronModel.StateCity", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("NikcronModel.StateCity", "City", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Stockhouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stockhouse : BusinessOffice
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stockhouse object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contact1">Initial value of the Contact1 property.</param>
        /// <param name="contact2">Initial value of the Contact2 property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static Stockhouse CreateStockhouse(global::System.Int32 id, Address address, Contact contact1, Contact contact2, Status status, AuditLog auditLog, global::System.Int32 companyId)
        {
            Stockhouse stockhouse = new Stockhouse();
            stockhouse.Id = id;
            stockhouse.Address = StructuralObject.VerifyComplexObjectIsNotNull(address, "Address");
            stockhouse.Contact1 = StructuralObject.VerifyComplexObjectIsNotNull(contact1, "Contact1");
            stockhouse.Contact2 = StructuralObject.VerifyComplexObjectIsNotNull(contact2, "Contact2");
            stockhouse.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            stockhouse.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            stockhouse.CompanyId = companyId;
            return stockhouse;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "StockhouseDistributor", "Distributor")]
        public EntityCollection<Distributor> Distributors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Distributor>("NikcronModel.StockhouseDistributor", "Distributor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Distributor>("NikcronModel.StockhouseDistributor", "Distributor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "CompanyStockhouse", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NikcronModel.CompanyStockhouse", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NikcronModel.CompanyStockhouse", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NikcronModel.CompanyStockhouse", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NikcronModel.CompanyStockhouse", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "StockhouseZone", "Zone")]
        public EntityCollection<Zone> Zones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Zone>("NikcronModel.StockhouseZone", "Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Zone>("NikcronModel.StockhouseZone", "Zone", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Tablet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tablet : ProductModel
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tablet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="manufactureId">Initial value of the ManufactureId property.</param>
        /// <param name="productTypeId">Initial value of the ProductTypeId property.</param>
        /// <param name="connectivity">Initial value of the Connectivity property.</param>
        public static Tablet CreateTablet(global::System.Int32 id, global::System.Int32 manufactureId, global::System.Int32 productTypeId, Connectivity connectivity)
        {
            Tablet tablet = new Tablet();
            tablet.Id = id;
            tablet.ManufactureId = manufactureId;
            tablet.ProductTypeId = productTypeId;
            tablet.Connectivity = StructuralObject.VerifyComplexObjectIsNotNull(connectivity, "Connectivity");
            return tablet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CallFeatures
        {
            get
            {
                return _CallFeatures;
            }
            set
            {
                OnCallFeaturesChanging(value);
                ReportPropertyChanging("CallFeatures");
                _CallFeatures = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CallFeatures");
                OnCallFeaturesChanged();
            }
        }
        private global::System.String _CallFeatures;
        partial void OnCallFeaturesChanging(global::System.String value);
        partial void OnCallFeaturesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupportedNetworks
        {
            get
            {
                return _SupportedNetworks;
            }
            set
            {
                OnSupportedNetworksChanging(value);
                ReportPropertyChanging("SupportedNetworks");
                _SupportedNetworks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SupportedNetworks");
                OnSupportedNetworksChanged();
            }
        }
        private global::System.String _SupportedNetworks;
        partial void OnSupportedNetworksChanging(global::System.String value);
        partial void OnSupportedNetworksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreinstalledBrowser
        {
            get
            {
                return _PreinstalledBrowser;
            }
            set
            {
                OnPreinstalledBrowserChanging(value);
                ReportPropertyChanging("PreinstalledBrowser");
                _PreinstalledBrowser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreinstalledBrowser");
                OnPreinstalledBrowserChanged();
            }
        }
        private global::System.String _PreinstalledBrowser;
        partial void OnPreinstalledBrowserChanging(global::System.String value);
        partial void OnPreinstalledBrowserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternetFeatures
        {
            get
            {
                return _InternetFeatures;
            }
            set
            {
                OnInternetFeaturesChanging(value);
                ReportPropertyChanging("InternetFeatures");
                _InternetFeatures = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternetFeatures");
                OnInternetFeaturesChanged();
            }
        }
        private global::System.String _InternetFeatures;
        partial void OnInternetFeaturesChanging(global::System.String value);
        partial void OnInternetFeaturesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AudioJack
        {
            get
            {
                return _AudioJack;
            }
            set
            {
                OnAudioJackChanging(value);
                ReportPropertyChanging("AudioJack");
                _AudioJack = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AudioJack");
                OnAudioJackChanged();
            }
        }
        private global::System.String _AudioJack;
        partial void OnAudioJackChanging(global::System.String value);
        partial void OnAudioJackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AudioFormat
        {
            get
            {
                return _AudioFormat;
            }
            set
            {
                OnAudioFormatChanging(value);
                ReportPropertyChanging("AudioFormat");
                _AudioFormat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AudioFormat");
                OnAudioFormatChanged();
            }
        }
        private global::System.String _AudioFormat;
        partial void OnAudioFormatChanging(global::System.String value);
        partial void OnAudioFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoFormat
        {
            get
            {
                return _VideoFormat;
            }
            set
            {
                OnVideoFormatChanging(value);
                ReportPropertyChanging("VideoFormat");
                _VideoFormat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoFormat");
                OnVideoFormatChanged();
            }
        }
        private global::System.String _VideoFormat;
        partial void OnVideoFormatChanging(global::System.String value);
        partial void OnVideoFormatChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Connectivity Connectivity
        {
            get
            {
                _Connectivity = GetValidValue(_Connectivity, "Connectivity", false, _ConnectivityInitialized);
                _ConnectivityInitialized = true;
                return _Connectivity;
            }
            set
            {
                OnConnectivityChanging(value);
                ReportPropertyChanging("Connectivity");
                _Connectivity = SetValidValue(_Connectivity, value, "Connectivity");
                _ConnectivityInitialized = true;
                ReportPropertyChanged("Connectivity");
                OnConnectivityChanged();
            }
        }
        private Connectivity _Connectivity;
        private bool _ConnectivityInitialized;
        partial void OnConnectivityChanging(Connectivity value);
        partial void OnConnectivityChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : Person
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="presentAddress">Initial value of the PresentAddress property.</param>
        /// <param name="permanentAddress">Initial value of the PermanentAddress property.</param>
        /// <param name="contact">Initial value of the Contact property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="officeId">Initial value of the OfficeId property.</param>
        public static User CreateUser(global::System.Int32 id, Address presentAddress, Address permanentAddress, Contact contact, Status status, AuditLog auditLog, global::System.Int16 roleId, global::System.Int32 officeId)
        {
            User user = new User();
            user.Id = id;
            user.PresentAddress = StructuralObject.VerifyComplexObjectIsNotNull(presentAddress, "PresentAddress");
            user.PermanentAddress = StructuralObject.VerifyComplexObjectIsNotNull(permanentAddress, "PermanentAddress");
            user.Contact = StructuralObject.VerifyComplexObjectIsNotNull(contact, "Contact");
            user.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            user.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            user.RoleId = roleId;
            user.OfficeId = officeId;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int16 _RoleId;
        partial void OnRoleIdChanging(global::System.Int16 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OfficeId
        {
            get
            {
                return _OfficeId;
            }
            set
            {
                OnOfficeIdChanging(value);
                ReportPropertyChanging("OfficeId");
                _OfficeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OfficeId");
                OnOfficeIdChanged();
            }
        }
        private global::System.Int32 _OfficeId;
        partial void OnOfficeIdChanging(global::System.Int32 value);
        partial void OnOfficeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNewUser
        {
            get
            {
                return _IsNewUser;
            }
            set
            {
                OnIsNewUserChanging(value);
                ReportPropertyChanging("IsNewUser");
                _IsNewUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNewUser");
                OnIsNewUserChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNewUser;
        partial void OnIsNewUserChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNewUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsResetPassword
        {
            get
            {
                return _IsResetPassword;
            }
            set
            {
                OnIsResetPasswordChanging(value);
                ReportPropertyChanging("IsResetPassword");
                _IsResetPassword = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsResetPassword");
                OnIsResetPasswordChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsResetPassword;
        partial void OnIsResetPasswordChanging(Nullable<global::System.Boolean> value);
        partial void OnIsResetPasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "UserRole", "Role")]
        public Role jm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("NikcronModel.UserRole", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("NikcronModel.UserRole", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> jmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("NikcronModel.UserRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("NikcronModel.UserRole", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NikcronModel", "UserOffice", "Office")]
        public Office Office
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("NikcronModel.UserOffice", "Office").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("NikcronModel.UserOffice", "Office").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Office> OfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("NikcronModel.UserOffice", "Office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Office>("NikcronModel.UserOffice", "Office", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NikcronModel", Name="Zone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Zone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Zone object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="auditLog">Initial value of the AuditLog property.</param>
        public static Zone CreateZone(global::System.Int32 id, global::System.String name, Status status, AuditLog auditLog)
        {
            Zone zone = new Zone();
            zone.Id = id;
            zone.Name = name;
            zone.Status = StructuralObject.VerifyComplexObjectIsNotNull(status, "Status");
            zone.AuditLog = StructuralObject.VerifyComplexObjectIsNotNull(auditLog, "AuditLog");
            return zone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Status Status
        {
            get
            {
                _Status = GetValidValue(_Status, "Status", false, _StatusInitialized);
                _StatusInitialized = true;
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = SetValidValue(_Status, value, "Status");
                _StatusInitialized = true;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Status _Status;
        private bool _StatusInitialized;
        partial void OnStatusChanging(Status value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AuditLog AuditLog
        {
            get
            {
                _AuditLog = GetValidValue(_AuditLog, "AuditLog", false, _AuditLogInitialized);
                _AuditLogInitialized = true;
                return _AuditLog;
            }
            set
            {
                OnAuditLogChanging(value);
                ReportPropertyChanging("AuditLog");
                _AuditLog = SetValidValue(_AuditLog, value, "AuditLog");
                _AuditLogInitialized = true;
                ReportPropertyChanged("AuditLog");
                OnAuditLogChanged();
            }
        }
        private AuditLog _AuditLog;
        private bool _AuditLogInitialized;
        partial void OnAuditLogChanging(AuditLog value);
        partial void OnAuditLogChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NikcronModel", Name="Address")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Address : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NikcronModel", Name="AuditLog")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class AuditLog : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditLog object.
        /// </summary>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static AuditLog CreateAuditLog(global::System.Int32 createdBy, global::System.DateTime createdOn)
        {
            AuditLog auditLog = new AuditLog();
            auditLog.CreatedBy = createdBy;
            auditLog.CreatedOn = createdOn;
            return auditLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NikcronModel", Name="Connectivity")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Connectivity : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HSPA_3G
        {
            get
            {
                return _HSPA_3G;
            }
            set
            {
                OnHSPA_3GChanging(value);
                ReportPropertyChanging("HSPA_3G");
                _HSPA_3G = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HSPA_3G");
                OnHSPA_3GChanged();
            }
        }
        private global::System.String _HSPA_3G;
        partial void OnHSPA_3GChanging(global::System.String value);
        partial void OnHSPA_3GChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GPRS_2G
        {
            get
            {
                return _GPRS_2G;
            }
            set
            {
                OnGPRS_2GChanging(value);
                ReportPropertyChanging("GPRS_2G");
                _GPRS_2G = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GPRS_2G");
                OnGPRS_2GChanged();
            }
        }
        private global::System.String _GPRS_2G;
        partial void OnGPRS_2GChanging(global::System.String value);
        partial void OnGPRS_2GChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String USB
        {
            get
            {
                return _USB;
            }
            set
            {
                OnUSBChanging(value);
                ReportPropertyChanging("USB");
                _USB = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("USB");
                OnUSBChanged();
            }
        }
        private global::System.String _USB;
        partial void OnUSBChanging(global::System.String value);
        partial void OnUSBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bluetooth
        {
            get
            {
                return _Bluetooth;
            }
            set
            {
                OnBluetoothChanging(value);
                ReportPropertyChanging("Bluetooth");
                _Bluetooth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bluetooth");
                OnBluetoothChanged();
            }
        }
        private global::System.String _Bluetooth;
        partial void OnBluetoothChanging(global::System.String value);
        partial void OnBluetoothChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hotspot
        {
            get
            {
                return _Hotspot;
            }
            set
            {
                OnHotspotChanging(value);
                ReportPropertyChanging("Hotspot");
                _Hotspot = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hotspot");
                OnHotspotChanged();
            }
        }
        private global::System.String _Hotspot;
        partial void OnHotspotChanging(global::System.String value);
        partial void OnHotspotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupportedNetworks
        {
            get
            {
                return _SupportedNetworks;
            }
            set
            {
                OnSupportedNetworksChanging(value);
                ReportPropertyChanging("SupportedNetworks");
                _SupportedNetworks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SupportedNetworks");
                OnSupportedNetworksChanged();
            }
        }
        private global::System.String _SupportedNetworks;
        partial void OnSupportedNetworksChanging(global::System.String value);
        partial void OnSupportedNetworksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OperatingFrequencies
        {
            get
            {
                return _OperatingFrequencies;
            }
            set
            {
                OnOperatingFrequenciesChanging(value);
                ReportPropertyChanging("OperatingFrequencies");
                _OperatingFrequencies = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OperatingFrequencies");
                OnOperatingFrequenciesChanged();
            }
        }
        private global::System.String _OperatingFrequencies;
        partial void OnOperatingFrequenciesChanging(global::System.String value);
        partial void OnOperatingFrequenciesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EDGE_2G
        {
            get
            {
                return _EDGE_2G;
            }
            set
            {
                OnEDGE_2GChanging(value);
                ReportPropertyChanging("EDGE_2G");
                _EDGE_2G = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EDGE_2G");
                OnEDGE_2GChanged();
            }
        }
        private global::System.String _EDGE_2G;
        partial void OnEDGE_2GChanging(global::System.String value);
        partial void OnEDGE_2GChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NikcronModel", Name="Contact")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Contact : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NikcronModel", Name="ItemStatus")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ItemStatus : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReceived
        {
            get
            {
                return _IsReceived;
            }
            set
            {
                OnIsReceivedChanging(value);
                ReportPropertyChanging("IsReceived");
                _IsReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReceived");
                OnIsReceivedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReceived;
        partial void OnIsReceivedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsMoved
        {
            get
            {
                return _IsMoved;
            }
            set
            {
                OnIsMovedChanging(value);
                ReportPropertyChanging("IsMoved");
                _IsMoved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMoved");
                OnIsMovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsMoved;
        partial void OnIsMovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsMovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReturned
        {
            get
            {
                return _IsReturned;
            }
            set
            {
                OnIsReturnedChanging(value);
                ReportPropertyChanging("IsReturned");
                _IsReturned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReturned");
                OnIsReturnedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReturned;
        partial void OnIsReturnedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReturnedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NikcronModel", Name="Status")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Status : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsHidden
        {
            get
            {
                return _IsHidden;
            }
            set
            {
                OnIsHiddenChanging(value);
                ReportPropertyChanging("IsHidden");
                _IsHidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHidden");
                OnIsHiddenChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsHidden;
        partial void OnIsHiddenChanging(Nullable<global::System.Boolean> value);
        partial void OnIsHiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReadOnly
        {
            get
            {
                return _IsReadOnly;
            }
            set
            {
                OnIsReadOnlyChanging(value);
                ReportPropertyChanging("IsReadOnly");
                _IsReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReadOnly");
                OnIsReadOnlyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReadOnly;
        partial void OnIsReadOnlyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReadOnlyChanged();

        #endregion

    }

    #endregion

    
}
